Source code:

- variant:
  - make variant accept character string literals and store them as std::string.
    low prio - people can work around it, but it'd be nice.
- char encoding:
  - stream transcoder - accepts istream ref in it's ctor, and has an ostream<<
    operator.
- xml:
  - clean up
  - add good error reporting (which line/character failed)
  - add character encoding awareness (see xparser above)
  - add namespace awareness
  - xml entity encoder - encode characters outside of a given charset as
    &#1234; entities
  - add (optional) validation
- stack based allocator
  - split into traits & policies (see linked article). investigate if we need to
    throw out-of-memory ourselves or that happens when we return 0.
  - create alloca()-based policy
  - create alloca()-based policy with fallback to malloc - must maintain list of
    heap pointers for that to work.
- move url class from libwool here
  - add composing of URLs (right now URL class can only parse)
- mime-parser
- array_list container, i.e. a rope-like approach to representing a random access
  container, except not a rope.

Other:
- doxygen template?
- MoinMoin (?) on the website
